openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/recipes/:
    get:
      operationId: api_recipes_list
      description: View for manage recipe APIs
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
          description: ''
    post:
      operationId: api_recipes_create
      description: View for manage recipe APIs
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
  /api/recipes/{id}/:
    get:
      operationId: api_recipes_retrieve
      description: View for manage recipe APIs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    put:
      operationId: api_recipes_update
      description: View for manage recipe APIs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    patch:
      operationId: api_recipes_partial_update
      description: View for manage recipe APIs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    delete:
      operationId: api_recipes_destroy
      description: View for manage recipe APIs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this recipe.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/list:
    get:
      operationId: api_users_list_list
      description: Retrieve the list of users with GET (just for admins)
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/me:
    get:
      operationId: api_users_me_retrieve
      description: Retrieve user data with GET and update user data with PUT/PATCH.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_me_update
      description: Retrieve user data with GET and update user data with PUT/PATCH.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_me_partial_update
      description: Retrieve user data with GET and update user data with PUT/PATCH.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/register:
    post:
      operationId: api_users_register_create
      description: Create a new user in the system with POST.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/token:
    post:
      operationId: api_users_token_create
      description: Crate a new auth token for user or retrieve the existent.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Token'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Token'
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
components:
  schemas:
    PatchedRecipeDetail:
      type: object
      description: Serializer for recipe detail view.
      properties:
        self:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
        links:
          type: string
          readOnly: true
    PatchedUser:
      type: object
      description: Serializer for the user model.
      properties:
        username:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 6
        self:
          type: string
          readOnly: true
        links:
          type: string
          readOnly: true
    Recipe:
      type: object
      description: Serializers for recipes.
      properties:
        self:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - price
      - self
      - time_minutes
      - title
    RecipeDetail:
      type: object
      description: Serializer for recipe detail view.
      properties:
        self:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
        links:
          type: string
          readOnly: true
      required:
      - links
      - price
      - self
      - time_minutes
      - title
    Token:
      type: object
      description: Serializer for the user auth token.
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    User:
      type: object
      description: Serializer for the user model.
      properties:
        username:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 6
        self:
          type: string
          readOnly: true
        links:
          type: string
          readOnly: true
      required:
      - links
      - password
      - self
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
